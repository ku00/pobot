{
  "name": "readline-history",
  "version": "1.2.0",
  "description": "Adds support for saving history to a file, and loading it next time automatically.",
  "license": "WTFPL",
  "files": [
    "readline-history.js",
    "test-readline-history.js",
    "README"
  ],
  "main": "readline-history",
  "readme": "/* Monkey-patching history support into readline.\n * Usage: createInterface is like readline's createInterface, but also takes a path and \n * a maximum (in-memory) history length. Also it's async, so use CPS.\n *\n * maxDiskSize is maximum bytes that can go in disk history\n * before a rotation. Rotation is super simple, removes previous .old, renames to .old\n *\n * console.log(module.example) to see an example of how to use.\n */\n\nvar rl = require('readline-history');\nrl.createInterface({\n    path: \"/tmp/history\",\n    maxLength: 1234,\n    input: process.input,\n    output: process.output,\n    next: function(rli) {\n        rli.setPrompt(\"? \");\n        rli.prompt();\n        rli.on('line',function(line) {\n            console.log(\"Got line \"+line);\n            rli.prompt();\n        });\n    };\n});\n\n",
  "readmeFilename": "README",
  "_id": "readline-history@1.2.0",
  "dist": {
    "shasum": "3ad45841567e04c281bb22e6f350d06b328932a1"
  },
  "_from": "readline-history@~1.2.0",
  "_resolved": "https://registry.npmjs.org/readline-history/-/readline-history-1.2.0.tgz"
}
